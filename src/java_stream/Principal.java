/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package java_stream;

import java.util.*;
import static java.awt.Color.*;
import java.io.IOException;
import java.nio.file.*;
import java.util.logging.*;
import java.util.stream.*;
import javax.swing.*;

/**
 *
 * @author hp
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public static String ruta = "C:\\Users\\hp\\Desktop\\archivo.txt";
    ArrayList<Persona> persona = new ArrayList<>();

    public Principal() {
        initComponents();
//        buquedatiemporeal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(51, 153, 255));
        jButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton1.setText("Mostrar Lista");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, 140, -1));

        jScrollPane2.setViewportView(jList1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 250, 250));

        jPanel2.setBackground(new java.awt.Color(0, 153, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("JAVA STREAM");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 50));
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, 160, 30));

        jButton2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(321, 230, 160, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Busqueda pendiente");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 160, 20));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Tiempo de carga en milisegundos: ");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 250, 20));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Tiempo de busqueda en milisegundos: ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 250, 20));

        jTextField2.setEnabled(false);
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, 160, 30));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ordenar", "Nombre", "Apellido1", "Apellido2" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 350, 160, 30));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("Tiempo de ordenamiento en milisegundos: ");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 280, 20));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 0, 550, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {

            ListaPersonas();
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //            buscar();
        try {
            long inicio = System.currentTimeMillis();
            buscar1();
            long fin = System.currentTimeMillis();
            long tiempo = fin - inicio;
            jLabel4.setText("Tiempo de busqueda en milisegundos: " + tiempo);
        } catch (Exception e) {
            System.out.println(e);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        try {
            long inicio = System.currentTimeMillis();
            ordenar();
            long fin = System.currentTimeMillis();
            long tiempo = fin - inicio;
            jLabel5.setText("Tiempo de ordenamiento en milisegundos: " + tiempo);
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    public void ordenar() {

        DefaultListModel listModel = new DefaultListModel();
        jList1.setModel(listModel);

        if (jComboBox1.getSelectedIndex() == 1) {
            List<Persona> personasOrdenadas = persona.stream()
                    .sorted(Comparator.comparing(Persona::getNombre))
                    .collect(Collectors.toList());

            for (Persona persona : personasOrdenadas) {
                listModel.addElement(String.format("%-10s%-10s%-10s%n", persona.getNombre(), persona.getApellido1(), persona.getApellido2()));
            }

        } else {
            if (jComboBox1.getSelectedIndex() == 2) {

                List<Persona> personasOrdenadas = persona.stream()
                        .sorted(Comparator.comparing(Persona::getApellido1))
                        .collect(Collectors.toList());

                for (Persona persona : personasOrdenadas) {
                    listModel.addElement(String.format("%-10s%-10s%-10s%n", persona.getNombre(), persona.getApellido1(), persona.getApellido2()));
                }

            } else {
                if (jComboBox1.getSelectedIndex() == 3) {

                    List<Persona> personasOrdenadas = persona.stream()
                            .sorted(Comparator.comparing(Persona::getApellido2))
                            .collect(Collectors.toList());

                    for (Persona persona : personasOrdenadas) {
                        listModel.addElement(String.format("%-10s%-10s%-10s%n", persona.getNombre(), persona.getApellido1(), persona.getApellido2()));
                    }
                }
            }
        }
    }

    public void buscar1() {

        String busqueda = jTextField1.getText();

        Optional<Persona> result = persona.stream()
                .filter(p -> (p.getNombre() + " " + p.getApellido1() + " " + p.getApellido2()).equalsIgnoreCase(busqueda))
                .findFirst();
        if (result.isPresent()) {
            Persona perencon = result.get();
            jTextField2.setText(perencon.getNombre() + " " + perencon.getApellido1() + " " + perencon.getApellido2());
            jLabel2.setText("ENCONTRADO");
            jLabel2.setForeground(green);
        } else {
            jLabel2.setText("NO EXISTE");
            jLabel2.setForeground(red);
            jTextField2.setText("Persona no encontrada");
        }
    }

    public void ListaPersonas() throws IOException {
        try {
            DefaultListModel listModel = new DefaultListModel();
            jLabel2.setText("PENDIENTE");
            jLabel2.setForeground(black);
            jList1.setModel(listModel);
            long inicio = System.currentTimeMillis();
            ArrayList<String> archivo = (ArrayList<String>) Files.readAllLines(Paths.get(ruta));
            archivo.stream().map(personas -> personas.split(" ")).filter(datos -> datos.length >= 3).forEach(datos -> {
                String nombre = datos[0];
                String apellido1 = datos[1];
                String apellido2 = datos[2];

                Persona mipersona = new Persona();
                mipersona.setNombre(nombre);
                mipersona.setApellido1(apellido1);
                mipersona.setApellido2(apellido2);

                persona.add(mipersona);

                String datosPersona = mipersona.getNombre() + " " + mipersona.getApellido1() + " " + mipersona.getApellido2();
                listModel.addElement(datosPersona);

            });
            long fin = System.currentTimeMillis();
            long tiempo = fin - inicio;
            jLabel3.setText("Tiempo de carga en milisegundos: " + tiempo);

        } catch (Exception e) {
            System.out.println(e);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
